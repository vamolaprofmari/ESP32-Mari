#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>

// Dados do WiFi
#define WIFI_SSID "NL_ROBOTICA"
#define WIFI_PASSWORD "Robocop2021"
// Telegram BOT Token (Botfather)
#define BOT_TOKEN "6757146165:AAGr8ZgEAISXvs3sVPa96BBUTMKxitzcPkg"

// Use @myidbot (IDBot) para saber qual o seu ID
#define CHAT_ID "861655212"

#define SensorUm 5


WiFiClientSecure secured_client;

UniversalTelegramBot bot(BOT_TOKEN, secured_client);



void setup() {

  Serial.begin(115200);
  pinMode(SensorUm, INPUT);


  //conexão da rede:
  Serial.print("Connecting to Wifi SSID ");
  Serial.print(WIFI_SSID);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  secured_client.setCACert(TELEGRAM_CERTIFICATE_ROOT);  
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.print("\nWiFi connected. IP address: ");
  Serial.println(WiFi.localIP());

  Serial.print("Retrieving time: ");
  configTime(0, 0, "pool.ntp.org");  // get UTC time via NTP
  time_t now = time(nullptr);
  while (now < 24 * 3600) {
    Serial.print(".");
    delay(100);
    now = time(nullptr);
  }
  Serial.println(now);

  bot.sendMessage(CHAT_ID, "Bot iniciou", "");//envia mensagem dizendo que iniciou o BOT
}

void loop() {
  delay(100);
  int leitura = analogRead(SensorUm);

Serial.println(leitura);
  
if (leitura  < 400) {
     Serial.println(" Evacuar ");
      bot.sendMessage(CHAT_ID, "Evacuar", "");
      
  }
  if (leitura > 630 && leitura < 999) {
    Serial.println(" Tudo está normal ");
  } 
  if (leitura > 1000) {
    Serial.println("Sensor não conectado");
  } 
}